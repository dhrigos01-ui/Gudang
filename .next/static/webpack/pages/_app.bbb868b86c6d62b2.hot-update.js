"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLeatherMaster: function() { return /* binding */ addLeatherMaster; },\n/* harmony export */   addLeatherStock: function() { return /* binding */ addLeatherStock; },\n/* harmony export */   addMaklunMaster: function() { return /* binding */ addMaklunMaster; },\n/* harmony export */   addShoeMaster: function() { return /* binding */ addShoeMaster; },\n/* harmony export */   addStock: function() { return /* binding */ addStock; },\n/* harmony export */   deleteLeatherMaster: function() { return /* binding */ deleteLeatherMaster; },\n/* harmony export */   deleteLeatherStockByItemId: function() { return /* binding */ deleteLeatherStockByItemId; },\n/* harmony export */   deleteMaklunMaster: function() { return /* binding */ deleteMaklunMaster; },\n/* harmony export */   deleteShoeMaster: function() { return /* binding */ deleteShoeMaster; },\n/* harmony export */   deleteShoeStock: function() { return /* binding */ deleteShoeStock; },\n/* harmony export */   getData: function() { return /* binding */ getData; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   removeLeatherStock: function() { return /* binding */ removeLeatherStock; },\n/* harmony export */   removeStock: function() { return /* binding */ removeStock; },\n/* harmony export */   returnLeatherStock: function() { return /* binding */ returnLeatherStock; },\n/* harmony export */   sellStock: function() { return /* binding */ sellStock; },\n/* harmony export */   transferStock: function() { return /* binding */ transferStock; },\n/* harmony export */   updateLeatherMaster: function() { return /* binding */ updateLeatherMaster; },\n/* harmony export */   updateLeatherStockQuantity: function() { return /* binding */ updateLeatherStockQuantity; },\n/* harmony export */   updateMaklunMaster: function() { return /* binding */ updateMaklunMaster; },\n/* harmony export */   updateShoeMaster: function() { return /* binding */ updateShoeMaster; },\n/* harmony export */   updateShoeStockQuantity: function() { return /* binding */ updateShoeStockQuantity; }\n/* harmony export */ });\nconst API_BASE_URL = \"/api\";\nconst getAuthHeaders = ()=>{\n    const token =  true ? localStorage.getItem(\"authToken\") : 0;\n    return {\n        \"Content-Type\": \"application/json\",\n        ...token && {\n            \"Authorization\": \"Bearer \".concat(token)\n        }\n    };\n};\nconst handleResponse = async (response)=>{\n    if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Error: \".concat(response.status));\n    }\n    return response.json();\n};\nconst login = async (username, password)=>{\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/auth/login\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            username,\n            password\n        })\n    });\n    return handleResponse(response);\n};\nconst getData = async ()=>{\n    const response = await fetch(\"\".concat(API_BASE_URL, \"/data/all\"), {\n        headers: getAuthHeaders()\n    });\n    return handleResponse(response);\n};\n// --- Shoe Master ---\nconst addShoeMaster = (shoeType, sizesStr)=>fetch(\"\".concat(API_BASE_URL, \"/shoe-masters\"), {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            shoeType,\n            sizesStr\n        })\n    }).then(handleResponse);\nconst updateShoeMaster = (id, shoeType, sizesStr)=>fetch(\"\".concat(API_BASE_URL, \"/shoe-masters/\").concat(id), {\n        method: \"PUT\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            shoeType,\n            sizesStr\n        })\n    }).then(handleResponse);\nconst deleteShoeMaster = (id)=>fetch(\"\".concat(API_BASE_URL, \"/shoe-masters/\").concat(id), {\n        method: \"DELETE\",\n        headers: getAuthHeaders()\n    }).then(handleResponse);\n// --- Maklun Master ---\nconst addMaklunMaster = (name)=>fetch(\"\".concat(API_BASE_URL, \"/maklun-masters\"), {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            name\n        })\n    }).then(handleResponse);\nconst updateMaklunMaster = (id, name)=>fetch(\"\".concat(API_BASE_URL, \"/maklun-masters/\").concat(id), {\n        method: \"PUT\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            name\n        })\n    }).then(handleResponse);\nconst deleteMaklunMaster = (id)=>fetch(\"\".concat(API_BASE_URL, \"/maklun-masters/\").concat(id), {\n        method: \"DELETE\",\n        headers: getAuthHeaders()\n    }).then(handleResponse);\n// --- Leather Master ---\nconst addLeatherMaster = (name)=>fetch(\"\".concat(API_BASE_URL, \"/leather-masters\"), {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            name\n        })\n    }).then(handleResponse);\nconst updateLeatherMaster = (id, name)=>fetch(\"\".concat(API_BASE_URL, \"/leather-masters/\").concat(id), {\n        method: \"PUT\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            name\n        })\n    }).then(handleResponse);\nconst deleteLeatherMaster = (id)=>fetch(\"\".concat(API_BASE_URL, \"/leather-masters/\").concat(id), {\n        method: \"DELETE\",\n        headers: getAuthHeaders()\n    }).then(handleResponse);\n// --- Inventory Operations ---\nconst addStock = (shoe, quantity, warehouse, source)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/shoe\"), {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            shoe,\n            quantity,\n            warehouse,\n            source,\n            operation: \"add\"\n        })\n    }).then(handleResponse);\nconst addLeatherStock = (leatherMasterId, quantity, supplier)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/leather\"), {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            leatherMasterId,\n            quantity,\n            supplier,\n            operation: \"add\"\n        })\n    }).then(handleResponse);\nconst returnLeatherStock = (leatherMasterId, quantity, returneeName, notes)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/leather\"), {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            leatherMasterId,\n            quantity,\n            returneeName,\n            notes,\n            operation: \"return\"\n        })\n    }).then(handleResponse);\nconst sellStock = (itemId, quantityToSell, customerName)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/shoe\"), {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            itemId,\n            quantity: quantityToSell,\n            customerName,\n            operation: \"sell\"\n        })\n    }).then(handleResponse);\nconst removeStock = (itemId, quantityToRemove, releasedTo)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/shoe\"), {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            itemId,\n            quantity: quantityToRemove,\n            releasedTo,\n            operation: \"remove\"\n        })\n    }).then(handleResponse);\nconst removeLeatherStock = (itemId, quantityToRemove, releasedTo)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/leather\"), {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            itemId,\n            quantity: quantityToRemove,\n            releasedTo,\n            operation: \"remove\"\n        })\n    }).then(handleResponse);\nconst transferStock = (itemId, quantityToTransfer, fromWarehouse, source)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/shoe\"), {\n        method: \"POST\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            itemId,\n            quantity: quantityToTransfer,\n            fromWarehouse,\n            source,\n            operation: \"transfer\"\n        })\n    }).then(handleResponse);\nconst updateShoeStockQuantity = (itemId, newQuantity)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/shoe/\").concat(itemId), {\n        method: \"PUT\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            newQuantity\n        })\n    }).then(handleResponse);\nconst deleteShoeStock = (itemId)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/shoe/\").concat(itemId), {\n        method: \"DELETE\",\n        headers: getAuthHeaders()\n    }).then(handleResponse);\nconst updateLeatherStockQuantity = (itemId, newQuantity)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/leather/\").concat(itemId), {\n        method: \"PUT\",\n        headers: getAuthHeaders(),\n        body: JSON.stringify({\n            newQuantity\n        })\n    }).then(handleResponse);\nconst deleteLeatherStockByItemId = (itemId)=>fetch(\"\".concat(API_BASE_URL, \"/inventory/leather/\").concat(itemId), {\n        method: \"DELETE\",\n        headers: getAuthHeaders()\n    }).then(handleResponse);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/api.ts\n"));

/***/ })

});